LANGUAGES = {
    "English": {
        # App UI
        "title": "Legal Lens AI",
        "subtitle": "AI-powered legal document analysis",
        "footer": "Legal Lens AI ¬© 2025",
        
        # File handling
        "upload_title": "Upload Legal Document",
        "upload_help": "Supported formats: PDF, PNG, JPG, TIFF, BMP",
        "extracting_text": "Extracting text from document...",
        "error_processing": "Error processing document",
        
        # Document viewer
        "document_preview": "Document Preview",
        "key_people": "Key People & Roles",
        "extract_roles": "Extract Names & Roles",
        "analyzing": "Analyzing document...",
        "no_roles_found": "No names with clear roles found in document",
        
        # Summary
        "generate_summary": "Generate AI Summary",
        "ai_summary": "AI Document Summary",
        "generate_audio": "Generate Audio Summary",
        "generating_audio": "Generating audio...",
        "audio_version": "Audio Summary",
        "error_audio": "Error generating audio",
        "read_summary": "Please read the summary above instead",
        
        # Chat interface
        "chatbot_title": "Legal Assistant Chat",
        "chat_placeholder": "Ask me about this document...",
        "welcome_message": "üëã Hello! I'm your legal assistant specialized in Indian law. How can I help you today?",
        "typing_indicator": "LegalBot is typing...",
        "message_sent": "‚úì Delivered",
        "bot_name": "LegalBot",
        "bot_avatar": "‚öñÔ∏è",
        
        # Errors
        "general_error": "An unexpected error occurred. We're working on it!",
        "api_error": "The AI service is currently unavailable",
        "network_error": "Network connection issue",
        "response_error": "The AI response couldn't be processed",
        "api_key_error": "Service configuration error",
        
        # Language selection
        "language_selector": "Interface Language",
        "summary_language": "Summary Language",
        
        # Legal terms
        "murder_law": {
            "title": "Indian Murder Laws",
            "section_302": "IPC Section 302",
            "death_penalty": "Death Penalty (Rarest of Rare Cases)",
            "life_term": "Life Imprisonment (14+ years)"
        }
    },
    "Hindi": {
        # App UI
        "title": "‡§≤‡•Ä‡§ó‡§≤ ‡§≤‡•á‡§Ç‡§∏ AI",
        "subtitle": "AI-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§ï‡§æ‡§®‡•Ç‡§®‡•Ä ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£",
        "footer": "‡§≤‡•Ä‡§ó‡§≤ ‡§≤‡•á‡§Ç‡§∏ AI ¬© 2025",
        
        # File handling
        "upload_title": "‡§ï‡§æ‡§®‡•Ç‡§®‡•Ä ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
        "upload_help": "‡§∏‡§Æ‡§∞‡•ç‡§•‡§ø‡§§ ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™: PDF, PNG, JPG, TIFF, BMP",
        "extracting_text": "‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§∏‡•á ‡§™‡§æ‡§† ‡§®‡§ø‡§ï‡§æ‡§≤‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...",
        "error_processing": "‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§™‡•ç‡§∞‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£ ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø",
        
        # Document viewer
        "document_preview": "‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§µ‡§≤‡•ã‡§ï‡§®",
        "key_people": "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø ‡§î‡§∞ ‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ‡§è‡§Å",
        "extract_roles": "‡§®‡§æ‡§Æ ‡§î‡§∞ ‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ‡§è‡§Å ‡§®‡§ø‡§ï‡§æ‡§≤‡•á‡§Ç",
        "analyzing": "‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...",
        "no_roles_found": "‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§™‡§∑‡•ç‡§ü ‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ‡§ì‡§Ç ‡§µ‡§æ‡§≤‡•á ‡§ï‡•ã‡§à ‡§®‡§æ‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡•á",
        
        # Summary
        "generate_summary": "AI ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ ‡§¨‡§®‡§æ‡§è‡§Ç",
        "ai_summary": "AI ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂",
        "generate_audio": "‡§ë‡§°‡§ø‡§Ø‡•ã ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ ‡§¨‡§®‡§æ‡§è‡§Ç",
        "generating_audio": "‡§ë‡§°‡§ø‡§Ø‡•ã ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ú‡§æ ‡§∞‡§π‡§æ ‡§π‡•à...",
        "audio_version": "‡§ë‡§°‡§ø‡§Ø‡•ã ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂",
        "error_audio": "‡§ë‡§°‡§ø‡§Ø‡•ã ‡§¨‡§®‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø",
        "read_summary": "‡§ï‡•É‡§™‡§Ø‡§æ ‡§ä‡§™‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ ‡§™‡§¢‡§º‡•á‡§Ç",
        
        # Chat interface
        "chatbot_title": "‡§ï‡§æ‡§®‡•Ç‡§®‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§ö‡•à‡§ü",
        "chat_placeholder": "‡§Æ‡•Å‡§ù‡§∏‡•á ‡§á‡§∏ ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ‡•á‡§Ç...",
        "welcome_message": "üëã ‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡§æ‡§®‡•Ç‡§® ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û ‡§è‡§ï ‡§ï‡§æ‡§®‡•Ç‡§®‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Å‡•§ ‡§Ü‡§ú ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å?",
        "typing_indicator": "‡§≤‡§ø‡§ñ ‡§∞‡§π‡§æ ‡§π‡•à...",
        "message_sent": "‚úì ‡§≠‡•á‡§ú‡§æ ‡§ó‡§Ø‡§æ",
        "bot_name": "‡§ï‡§æ‡§®‡•Ç‡§®‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§ï",
        "bot_avatar": "üìú",
        
        # Errors
        "general_error": "‡§è‡§ï ‡§Ö‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡§æ‡§∂‡§ø‡§§ ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•Å‡§à‡•§ ‡§π‡§Æ ‡§á‡§∏ ‡§™‡§∞ ‡§ï‡§æ‡§Æ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç!",
        "api_error": "AI ‡§∏‡•á‡§µ‡§æ ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à",
        "network_error": "‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ",
        "response_error": "AI ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•ã ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§ø‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§æ",
        "api_key_error": "‡§∏‡•á‡§µ‡§æ ‡§ï‡•â‡§®‡•ç‡§´‡§º‡§ø‡§ó‡§∞‡•á‡§∂‡§® ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø",
        
        # Language selection
        "language_selector": "‡§á‡§Ç‡§ü‡§∞‡§´‡§º‡•á‡§∏ ‡§≠‡§æ‡§∑‡§æ",
        "summary_language": "‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ ‡§≠‡§æ‡§∑‡§æ",
        
        # Legal terms
        "murder_law": {
            "title": "‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§π‡§§‡•ç‡§Ø‡§æ ‡§ï‡§æ‡§®‡•Ç‡§®",
            "section_302": "‡§Ü‡§à‡§™‡•Ä‡§∏‡•Ä ‡§ß‡§æ‡§∞‡§æ 302",
            "death_penalty": "‡§Æ‡•É‡§§‡•ç‡§Ø‡•Å‡§¶‡§Ç‡§° (‡§Ö‡§§‡•ç‡§Ø‡§Ç‡§§ ‡§¶‡•Å‡§∞‡•ç‡§≤‡§≠ ‡§Æ‡§æ‡§Æ‡§≤‡•á)",
            "life_term": "‡§Ü‡§ú‡•Ä‡§µ‡§® ‡§ï‡§æ‡§∞‡§æ‡§µ‡§æ‡§∏ (14+ ‡§µ‡§∞‡•ç‡§∑)"
        }
    },
    "Telugu": {
        # App UI
        "title": "‡∞≤‡±Ä‡∞ó‡∞≤‡±ç ‡∞≤‡±Ü‡∞®‡±ç‡∞∏‡±ç AI",
        "subtitle": "AI-‡∞∂‡∞ï‡±ç‡∞§‡∞ø‡∞§‡±ã ‡∞ö‡∞ü‡±ç‡∞ü‡∞™‡∞∞‡∞Æ‡±à‡∞® ‡∞°‡∞æ‡∞ï‡±ç‡∞Ø‡±Å‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç ‡∞µ‡∞ø‡∞∂‡±ç‡∞≤‡±á‡∞∑‡∞£",
        "footer": "‡∞≤‡±Ä‡∞ó‡∞≤‡±ç ‡∞≤‡±Ü‡∞®‡±ç‡∞∏‡±ç AI ¬© 2025",
        
        # File handling
        "upload_title": "‡∞ö‡∞ü‡±ç‡∞ü‡∞™‡∞∞‡∞Æ‡±à‡∞® ‡∞°‡∞æ‡∞ï‡±ç‡∞Ø‡±Å‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç ‡∞Ö‡∞™‡±ç‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø",
        "upload_help": "‡∞∏‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞® ‡∞´‡∞æ‡∞∞‡±ç‡∞Æ‡∞æ‡∞ü‡±ç‡∞≤‡±Å: PDF, PNG, JPG, TIFF, BMP",
        "extracting_text": "‡∞°‡∞æ‡∞ï‡±ç‡∞Ø‡±Å‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç ‡∞®‡±Å‡∞Ç‡∞°‡∞ø ‡∞ü‡±Ü‡∞ï‡±ç‡∞∏‡±ç‡∞ü‡±ç ‡∞§‡±Ä‡∞∏‡±ç‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞Æ‡±Å...",
        "error_processing": "‡∞°‡∞æ‡∞ï‡±ç‡∞Ø‡±Å‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç ‡∞™‡±ç‡∞∞‡∞æ‡∞∏‡±Ü‡∞∏‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç‡∞≤‡±ã ‡∞≤‡±ã‡∞™‡∞Ç",
        
        # Chat interface
        "chatbot_title": "‡∞ö‡∞ü‡±ç‡∞ü‡∞™‡∞∞‡∞Æ‡±à‡∞® ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å ‡∞ö‡∞æ‡∞ü‡±ç",
        "chat_placeholder": "‡∞à ‡∞°‡∞æ‡∞ï‡±ç‡∞Ø‡±Å‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞®‡∞®‡±ç‡∞®‡±Å ‡∞Ö‡∞°‡∞ó‡∞Ç‡∞°‡∞ø...",
        "welcome_message": "üëã ‡∞®‡∞Æ‡∞∏‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç! ‡∞®‡±á‡∞®‡±Å ‡∞≠‡∞æ‡∞∞‡∞§‡±Ä‡∞Ø ‡∞ö‡∞ü‡±ç‡∞ü‡∞Ç‡∞≤‡±ã ‡∞®‡∞ø‡∞™‡±Å‡∞£‡±Å‡∞°‡∞ø‡∞®‡∞ø. ‡∞à‡∞∞‡±ã‡∞ú‡±Å ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞é‡∞≤‡∞æ ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å?",
        "typing_indicator": "‡∞ü‡±à‡∞™‡±ç ‡∞ö‡±á‡∞∏‡±ç‡∞§‡±ã‡∞Ç‡∞¶‡∞ø...",
        "message_sent": "‚úì ‡∞™‡∞Ç‡∞™‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø",
        "bot_name": "‡∞ö‡∞ü‡±ç‡∞ü‡∞™‡∞∞‡∞Æ‡±à‡∞® ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï‡±Å‡∞°‡±Å",
        "bot_avatar": "üìú",
        
        # Language selection
        "language_selector": "‡∞á‡∞Ç‡∞ü‡∞∞‡±ç‡∞´‡±á‡∞∏‡±ç ‡∞≠‡∞æ‡∞∑",
        "summary_language": "‡∞∏‡∞æ‡∞∞‡∞æ‡∞Ç‡∞∂‡∞Ç ‡∞≠‡∞æ‡∞∑"
    },
    "Marathi": {
        # App UI
        "title": "‡§≤‡•Ä‡§ó‡§≤ ‡§≤‡•á‡§®‡•ç‡§∏ AI",
        "subtitle": "AI-‡§ö‡§æ‡§≤‡§ø‡§§ ‡§ï‡§æ‡§Ø‡§¶‡•á‡§∂‡•Ä‡§∞ ‡§¶‡§∏‡•ç‡§§‡§ê‡§µ‡§ú ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£",
        "footer": "‡§≤‡•Ä‡§ó‡§≤ ‡§≤‡•á‡§®‡•ç‡§∏ AI ¬© 2025",
        
        # Chat interface
        "chatbot_title": "‡§ï‡§æ‡§Ø‡§¶‡•á‡§∂‡•Ä‡§∞ ‡§∏‡§π‡§æ‡§Ø‡•ç‡§Ø‡§ï ‡§ö‡•Ö‡§ü",
        "chat_placeholder": "‡§Ø‡§æ ‡§¶‡§∏‡•ç‡§§‡§ê‡§µ‡§ú‡§æ‡§¨‡§¶‡•ç‡§¶‡§≤ ‡§Æ‡§≤‡§æ ‡§µ‡§ø‡§ö‡§æ‡§∞‡§æ...",
        "welcome_message": "üëã ‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞! ‡§Æ‡•Ä ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡§æ‡§Ø‡§¶‡•ç‡§Ø‡§æ‡§§ ‡§§‡§ú‡•ç‡§û ‡§Ü‡§π‡•á. ‡§Ü‡§ú ‡§Æ‡•Ä ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§≤‡§æ ‡§ï‡§∂‡•Ä ‡§Æ‡§¶‡§§ ‡§ï‡§∞‡•Ç ‡§∂‡§ï‡§§‡•ã?",
        "typing_indicator": "‡§ü‡§æ‡§á‡§™ ‡§ï‡§∞‡§§ ‡§Ü‡§π‡•á...",
        "message_sent": "‚úì ‡§™‡§æ‡§†‡§µ‡§≤‡•á",
        "bot_name": "‡§ï‡§æ‡§Ø‡§¶‡•á‡§∂‡•Ä‡§∞ ‡§∏‡§π‡§æ‡§Ø‡•ç‡§Ø‡§ï",
        "bot_avatar": "üìú",
        
        # Language selection
        "language_selector": "‡§á‡§Ç‡§ü‡§∞‡§´‡•á‡§∏ ‡§≠‡§æ‡§∑‡§æ",
        "summary_language": "‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ ‡§≠‡§æ‡§∑‡§æ"
    },
    "Bengali": {
        # App UI
        "title": "‡¶≤‡¶ø‡¶ó‡¶æ‡¶≤ ‡¶≤‡ßá‡¶®‡ßç‡¶∏ AI",
        "subtitle": "AI-‡¶ö‡¶æ‡¶≤‡¶ø‡¶§ ‡¶Ü‡¶á‡¶®‡¶ø ‡¶®‡¶•‡¶ø ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£",
        "footer": "‡¶≤‡¶ø‡¶ó‡¶æ‡¶≤ ‡¶≤‡ßá‡¶®‡ßç‡¶∏ AI ¬© 2025",
        
        # Chat interface
        "chatbot_title": "‡¶Ü‡¶á‡¶®‡¶ø ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶ï ‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü",
        "chat_placeholder": "‡¶è‡¶á ‡¶®‡¶•‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...",
        "welcome_message": "üëã ‡¶®‡¶Æ‡¶∏‡ßç‡¶ï‡¶æ‡¶∞! ‡¶Ü‡¶Æ‡¶ø ‡¶≠‡¶æ‡¶∞‡¶§‡ßÄ‡¶Ø‡¶º ‡¶Ü‡¶á‡¶®‡ßá ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û‡•§ ‡¶Ü‡¶ú ‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?",
        "typing_indicator": "‡¶ü‡¶æ‡¶á‡¶™ ‡¶ï‡¶∞‡¶õ‡ßá...",
        "message_sent": "‚úì ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá",
        "bot_name": "‡¶Ü‡¶á‡¶®‡¶ø ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶ï",
        "bot_avatar": "üìú",
        
        # Language selection
        "language_selector": "‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏ ‡¶≠‡¶æ‡¶∑‡¶æ",
        "summary_language": "‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂ ‡¶≠‡¶æ‡¶∑‡¶æ"
    },
    "Tamil": {
        # App UI
        "title": "‡Æ≤‡ØÄ‡Æï‡Æ≤‡Øç ‡Æ≤‡ØÜ‡Æ©‡Øç‡Æ∏‡Øç AI",
        "subtitle": "AI-‡Æá‡ÆØ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æö‡Æü‡Øç‡Æü ‡ÆÜ‡Æµ‡Æ£ ‡Æ™‡Æï‡ØÅ‡Æ™‡Øç‡Æ™‡Ææ‡ÆØ‡Øç‡Æµ‡ØÅ",
        "footer": "‡Æ≤‡ØÄ‡Æï‡Æ≤‡Øç ‡Æ≤‡ØÜ‡Æ©‡Øç‡Æ∏‡Øç AI ¬© 2025",
        
        # Chat interface
        "chatbot_title": "‡Æö‡Æü‡Øç‡Æü ‡Æâ‡Æ§‡Æµ‡Æø‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç ‡ÆÖ‡Æ∞‡Æü‡Øç‡Æü‡Øà",
        "chat_placeholder": "‡Æá‡Æ®‡Øç‡Æ§ ‡ÆÜ‡Æµ‡Æ£‡Æ§‡Øç‡Æ§‡Øà‡Æ™‡Øç ‡Æ™‡Æ±‡Øç‡Æ±‡Æø ‡Æé‡Æ©‡Øç‡Æ©‡Æø‡Æü‡ÆÆ‡Øç ‡Æï‡Øá‡Æ≥‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç...",
        "welcome_message": "üëã ‡Æµ‡Æ£‡Æï‡Øç‡Æï‡ÆÆ‡Øç! ‡Æ®‡Ææ‡Æ©‡Øç ‡Æá‡Æ®‡Øç‡Æ§‡Æø‡ÆØ ‡Æö‡Æü‡Øç‡Æü‡Æ§‡Øç‡Æ§‡Æø‡Æ≤‡Øç ‡Æ®‡Æø‡Æ™‡ØÅ‡Æ£‡Æ∞‡Øç. ‡Æá‡Æ©‡Øç‡Æ±‡ØÅ ‡Æ®‡Ææ‡Æ©‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æé‡Æ™‡Øç‡Æ™‡Æü‡Æø ‡Æâ‡Æ§‡Æµ ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡ØÅ‡ÆÆ‡Øç?",
        "typing_indicator": "‡Æ§‡Æü‡Øç‡Æü‡Æö‡Øç‡Æö‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç‡Æï‡Æø‡Æ±‡Æ§‡ØÅ...",
        "message_sent": "‚úì ‡ÆÖ‡Æ©‡ØÅ‡Æ™‡Øç‡Æ™‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ",
        "bot_name": "‡Æö‡Æü‡Øç‡Æü ‡Æâ‡Æ§‡Æµ‡Æø‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç",
        "bot_avatar": "üìú",
        
        # Language selection
        "language_selector": "‡Æá‡Æü‡Øà‡ÆÆ‡ØÅ‡Æï‡ÆÆ‡Øç ‡ÆÆ‡Øä‡Æ¥‡Æø",
        "summary_language": "‡Æö‡ØÅ‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡ÆÆ‡Øä‡Æ¥‡Æø"
    },
    "Spanish": {
        # App UI
        "title": "Legal Lens AI",
        "subtitle": "An√°lisis de documentos legales con IA",
        "footer": "Legal Lens AI ¬© 2025",
        
        # Chat interface
        "chatbot_title": "Asistente Legal Chat",
        "chat_placeholder": "Preg√∫ntame sobre este documento...",
        "welcome_message": "üëã ¬°Hola! Soy tu asistente legal especializado en derecho indio. ¬øC√≥mo puedo ayudarte hoy?",
        "typing_indicator": "Escribiendo...",
        "message_sent": "‚úì Enviado",
        "bot_name": "Asistente Legal",
        "bot_avatar": "üìú",
        
        # Language selection
        "language_selector": "Idioma de la interfaz",
        "summary_language": "Idioma del resumen"
    },
    "German": {
        # App UI
        "title": "Legal Lens AI",
        "subtitle": "KI-gest√ºtzte Analyse von Rechtsdokumenten",
        "footer": "Legal Lens AI ¬© 2025",
        
        # Chat interface
        "chatbot_title": "Rechtsassistent Chat",
        "chat_placeholder": "Fragen Sie mich zu diesem Dokument...",
        "welcome_message": "üëã Hallo! Ich bin Ihr auf indisches Recht spezialisierter Rechtsassistent. Wie kann ich Ihnen heute helfen?",
        "typing_indicator": "Tippen...",
        "message_sent": "‚úì Gesendet",
        "bot_name": "Rechtsassistent",
        "bot_avatar": "üìú",
        
        # Language selection
        "language_selector": "Schnittstellensprache",
        "summary_language": "Zusammenfassungssprache"
    },
    "French": {
        # App UI
        "title": "Legal Lens AI",
        "subtitle": "Analyse de documents juridiques par IA",
        "footer": "Legal Lens AI ¬© 2025",
        
        # Chat interface
        "chatbot_title": "Assistant Juridique Chat",
        "chat_placeholder": "Posez-moi des questions sur ce document...",
        "welcome_message": "üëã Bonjour! Je suis votre assistant juridique sp√©cialis√© en droit indien. Comment puis-je vous aider aujourd'hui?",
        "typing_indicator": "En train d'√©crire...",
        "message_sent": "‚úì Envoy√©",
        "bot_name": "Assistant Juridique",
        "bot_avatar": "üìú",
        
        # Language selection
        "language_selector": "Langue de l'interface",
        "summary_language": "Langue du r√©sum√©"
    }
}

def get_text(key: str, language: str = "English", default: str = None) -> str:
    """
    Get localized text for the given key and language.
    
    Args:
        key: The text key to look up (supports dot notation for nested keys)
        language: The language to use (default: English)
        default: Fallback value if key not found
        
    Returns:
        The localized text or the key itself if not found
    """
    try:
        # Handle nested keys (e.g., "murder_law.title")
        keys = key.split('.')
        lang_dict = LANGUAGES.get(language, LANGUAGES["English"])
        value = lang_dict
        
        for k in keys:
            if isinstance(value, dict):
                value = value.get(k, {})
            else:
                value = {}
                break
        
        if isinstance(value, str):
            return value
        return default if default is not None else key
    except Exception:
        return default if default is not None else key